@using Newtonsoft.Json
@model Twitta.Website.Models.Search

@{
    Layout = "~/Views/Shared/_LayoutSite.cshtml";
    ViewBag.Title = "Reports | " + Model.Title;
}

<h2>Search | @Model.Title</h2>

<a href="#" id="updateChart">Update Charts</a><br /><br />

<div id="basicWordCountChart" style="min-width: 310px; height: 500px; margin: 0 auto"></div>
<div id="advancedWordCountChart" style="min-width: 310px; height: 500px; margin: 0 auto"></div>

<script type="text/javascript">

    function BasicWordCountChart(data) {
        var options = {
            chart: {
                renderTo: 'basicWordCountChart',
                type: 'column'
            },
            title:{
                text:''
            },
            subTitle:{
                text:''
            },
            xAxis: {
                categories: data.words,
                labels: {
                    rotation: -45,
                    align: 'right',
                    style: {
                        fontSize: '13px'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Word Count'
                }
            },
            tooltip: {
                formater: function() {
                    return "banana";
                },
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            legend: {
                enabled: false
            },
            series: [{
                data: data.counts
            }]
        };
        var chart = new Highcharts.Chart(options);

        function updateGraph() {
            //ajax calls
            $.ajax({
                url: '@Url.Action("BasicWordCountData", new { id = Model.SearchId })',
                type: 'GET',
                dataType: 'json',
                success: function(response) {
                    chart.xAxis[0].setCategories(response.words);
                    chart.series[0].setData(response.counts);
                }
            });
        }

        $('#updateChart').on('click', function() {
            updateGraph();
            return false;
        });
    }

    function AdvancedWordCountChart(data) {
        var serieses = new Array();
        for (var i = 0; i < data.counts.length; i++) {
            serieses.push({
                type: 'line',
                name: data.words[i],
                pointInterval: data.timeInterval,
                pointStart: Date.UTC(2014, 02, 28, 9, 0, 0), // TODO: Set this to the actual start of the range
                data: data.counts[i]
            });
        }
        var options = {
            chart: {
                renderTo: 'advancedWordCountChart',
                zoomType: 'x'
            },
            title: {
                text: ''
            },
            subtitle: {
                text: document.ontouchstart === undefined ?
                    'Click and drag in the plot area to zoom in' :
                    'Pinch the chart to zoom in'
            },
            xAxis: {
                type: 'datetime',
                maxZoom: 3600 * 1000,
                title: {
                    text: null
                }
            },
            yAxis: {
                title: {
                    text: 'Word Count'
                }
            },
            tooltip: {
                shared: true
            },
            legend: {
                enabled: true
            },
            plotOptions: {
                area: {
                    fillColor: {
                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1},
                        stops: [
                            [0, Highcharts.getOptions().colors[0]],
                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                        ]
                    },
                    lineWidth: 1,
                    marker: {
                        enabled: false
                    },
                    shadow: false,
                    states: {
                        hover: {
                            lineWidth: 1
                        }
                    },
                    threshold: null
                }
            },
            series: serieses
        };
        var chart = new Highcharts.Chart(options);

        function updateGraph() {
            //ajax calls
            $.ajax({
                url: '@Url.Action("AdvancedWordCountData", new { id = Model.SearchId, interval = 6 })',
                type: 'GET',
                dataType: 'json',
                success: function(response) {
                    console.log(response);
                }
            });
        }

        $('#updateChart').on('click', function() {
            updateGraph();
            return false;
        });
    }

    
    $.ajax({
        type: 'GET',
        url: '@Url.Action("BasicWordCountData", new { id = Model.SearchId })',
        success: function (response) {
            BasicWordCountChart(response);
        }
    });
    $.ajax({
        type: 'GET',
        url: '@Url.Action("AdvancedWordCountData", new { id = Model.SearchId, interval = 6 })',
        success: function(response) {
            AdvancedWordCountChart(response);
        }
    });
    

</script>